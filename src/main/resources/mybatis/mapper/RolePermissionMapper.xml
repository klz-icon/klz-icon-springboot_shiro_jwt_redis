<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.klz.iblog.mapper.RolePermissionMapper">
  <resultMap id="BaseResultMap" type="com.klz.iblog.entity.RolePermission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="permission_id" jdbcType="INTEGER" property="permissionId" />
    <result column="createTime" jdbcType="DATE" property="createtime" />
    <result column="updateTime" jdbcType="DATE" property="updatetime" />
    <result column="deleteTime" jdbcType="DATE" property="deletetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, permission_id, createTime, updateTime, deleteTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.klz.iblog.entity.RolePermission">
    insert into role_permission (id, role_id, permission_id, 
      createTime, updateTime, deleteTime
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{permissionId,jdbcType=INTEGER}, 
      #{createtime,jdbcType=DATE}, #{updatetime,jdbcType=DATE}, #{deletetime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.klz.iblog.entity.RolePermission">
    insert into role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="deletetime != null">
        deleteTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=DATE},
      </if>
      <if test="deletetime != null">
        #{deletetime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.klz.iblog.entity.RolePermission">
    update role_permission
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=DATE},
      </if>
      <if test="deletetime != null">
        deleteTime = #{deletetime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.klz.iblog.entity.RolePermission">
    update role_permission
    set role_id = #{roleId,jdbcType=INTEGER},
      permission_id = #{permissionId,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=DATE},
      updateTime = #{updatetime,jdbcType=DATE},
      deleteTime = #{deletetime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>